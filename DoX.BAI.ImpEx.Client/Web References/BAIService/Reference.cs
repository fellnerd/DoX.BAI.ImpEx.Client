//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace DoX.BAI.ImpEx.Client.BAIService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="HttpEndpoint", Namespace="http://tempuri.org/")]
    public partial class BAIService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SubscribeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnSubscribeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetConfigOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReceiveDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReceiveDataSelectiveOperationCompleted;
        
        private System.Threading.SendOrPostCallback DataReceivedOperationCompleted;
        
        private System.Threading.SendOrPostCallback DataReceivedSelectiveOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReceiveUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateReceivedOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBAITimeOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public BAIService() {
            this.Url = global::DoX.BAI.ImpEx.Client.Properties.Settings.Default.DoX_BAI_ImpEx_Client_BAIService_BAIService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SubscribeCompletedEventHandler SubscribeCompleted;
        
        /// <remarks/>
        public event UnSubscribeCompletedEventHandler UnSubscribeCompleted;
        
        /// <remarks/>
        public event GetConfigCompletedEventHandler GetConfigCompleted;
        
        /// <remarks/>
        public event SendDataCompletedEventHandler SendDataCompleted;
        
        /// <remarks/>
        public event ReceiveDataCompletedEventHandler ReceiveDataCompleted;
        
        /// <remarks/>
        public event ReceiveDataSelectiveCompletedEventHandler ReceiveDataSelectiveCompleted;
        
        /// <remarks/>
        public event DataReceivedCompletedEventHandler DataReceivedCompleted;
        
        /// <remarks/>
        public event DataReceivedSelectiveCompletedEventHandler DataReceivedSelectiveCompleted;
        
        /// <remarks/>
        public event ReceiveUpdateCompletedEventHandler ReceiveUpdateCompleted;
        
        /// <remarks/>
        public event UpdateReceivedCompletedEventHandler UpdateReceivedCompleted;
        
        /// <remarks/>
        public event SendLogCompletedEventHandler SendLogCompleted;
        
        /// <remarks/>
        public event GetBAITimeCompletedEventHandler GetBAITimeCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IDataExchange/Subscribe", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public BAIResult Subscribe([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] BAIUser user) {
            object[] results = this.Invoke("Subscribe", new object[] {
                        user});
            return ((BAIResult)(results[0]));
        }
        
        /// <remarks/>
        public void SubscribeAsync(BAIUser user) {
            this.SubscribeAsync(user, null);
        }
        
        /// <remarks/>
        public void SubscribeAsync(BAIUser user, object userState) {
            if ((this.SubscribeOperationCompleted == null)) {
                this.SubscribeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubscribeOperationCompleted);
            }
            this.InvokeAsync("Subscribe", new object[] {
                        user}, this.SubscribeOperationCompleted, userState);
        }
        
        private void OnSubscribeOperationCompleted(object arg) {
            if ((this.SubscribeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubscribeCompleted(this, new SubscribeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IDataExchange/UnSubscribe", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public BAIResult UnSubscribe([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] BAIUser user) {
            object[] results = this.Invoke("UnSubscribe", new object[] {
                        user});
            return ((BAIResult)(results[0]));
        }
        
        /// <remarks/>
        public void UnSubscribeAsync(BAIUser user) {
            this.UnSubscribeAsync(user, null);
        }
        
        /// <remarks/>
        public void UnSubscribeAsync(BAIUser user, object userState) {
            if ((this.UnSubscribeOperationCompleted == null)) {
                this.UnSubscribeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnSubscribeOperationCompleted);
            }
            this.InvokeAsync("UnSubscribe", new object[] {
                        user}, this.UnSubscribeOperationCompleted, userState);
        }
        
        private void OnUnSubscribeOperationCompleted(object arg) {
            if ((this.UnSubscribeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnSubscribeCompleted(this, new UnSubscribeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IDataExchange/GetConfig", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public BAIResult GetConfig([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] BAIUser user, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out Config config) {
            object[] results = this.Invoke("GetConfig", new object[] {
                        user});
            config = ((Config)(results[1]));
            return ((BAIResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetConfigAsync(BAIUser user) {
            this.GetConfigAsync(user, null);
        }
        
        /// <remarks/>
        public void GetConfigAsync(BAIUser user, object userState) {
            if ((this.GetConfigOperationCompleted == null)) {
                this.GetConfigOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConfigOperationCompleted);
            }
            this.InvokeAsync("GetConfig", new object[] {
                        user}, this.GetConfigOperationCompleted, userState);
        }
        
        private void OnGetConfigOperationCompleted(object arg) {
            if ((this.GetConfigCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConfigCompleted(this, new GetConfigCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IDataExchange/SendData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public BAIResult SendData([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] BAIUser user, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/DoX.BAI.ImpEx.Shared")] DataEntry[] dataEntries) {
            object[] results = this.Invoke("SendData", new object[] {
                        user,
                        dataEntries});
            return ((BAIResult)(results[0]));
        }
        
        /// <remarks/>
        public void SendDataAsync(BAIUser user, DataEntry[] dataEntries) {
            this.SendDataAsync(user, dataEntries, null);
        }
        
        /// <remarks/>
        public void SendDataAsync(BAIUser user, DataEntry[] dataEntries, object userState) {
            if ((this.SendDataOperationCompleted == null)) {
                this.SendDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendDataOperationCompleted);
            }
            this.InvokeAsync("SendData", new object[] {
                        user,
                        dataEntries}, this.SendDataOperationCompleted, userState);
        }
        
        private void OnSendDataOperationCompleted(object arg) {
            if ((this.SendDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendDataCompleted(this, new SendDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IDataExchange/ReceiveData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public BAIResult ReceiveData([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] BAIUser user, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/DoX.BAI.ImpEx.Shared")] out DataEntry[] dataEntries, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out System.Nullable<bool> furtherDataAvailable, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] out bool furtherDataAvailableSpecified) {
            object[] results = this.Invoke("ReceiveData", new object[] {
                        user});
            dataEntries = ((DataEntry[])(results[1]));
            furtherDataAvailable = ((System.Nullable<bool>)(results[2]));
            furtherDataAvailableSpecified = ((bool)(results[3]));
            return ((BAIResult)(results[0]));
        }
        
        /// <remarks/>
        public void ReceiveDataAsync(BAIUser user) {
            this.ReceiveDataAsync(user, null);
        }
        
        /// <remarks/>
        public void ReceiveDataAsync(BAIUser user, object userState) {
            if ((this.ReceiveDataOperationCompleted == null)) {
                this.ReceiveDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReceiveDataOperationCompleted);
            }
            this.InvokeAsync("ReceiveData", new object[] {
                        user}, this.ReceiveDataOperationCompleted, userState);
        }
        
        private void OnReceiveDataOperationCompleted(object arg) {
            if ((this.ReceiveDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReceiveDataCompleted(this, new ReceiveDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IDataExchange/ReceiveDataSelective", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public BAIResult ReceiveDataSelective([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] BAIUser user, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string category, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/DoX.BAI.ImpEx.Shared")] out DataEntry[] dataEntries, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out System.Nullable<bool> furtherDataAvailable, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] out bool furtherDataAvailableSpecified) {
            object[] results = this.Invoke("ReceiveDataSelective", new object[] {
                        user,
                        category});
            dataEntries = ((DataEntry[])(results[1]));
            furtherDataAvailable = ((System.Nullable<bool>)(results[2]));
            furtherDataAvailableSpecified = ((bool)(results[3]));
            return ((BAIResult)(results[0]));
        }
        
        /// <remarks/>
        public void ReceiveDataSelectiveAsync(BAIUser user, string category) {
            this.ReceiveDataSelectiveAsync(user, category, null);
        }
        
        /// <remarks/>
        public void ReceiveDataSelectiveAsync(BAIUser user, string category, object userState) {
            if ((this.ReceiveDataSelectiveOperationCompleted == null)) {
                this.ReceiveDataSelectiveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReceiveDataSelectiveOperationCompleted);
            }
            this.InvokeAsync("ReceiveDataSelective", new object[] {
                        user,
                        category}, this.ReceiveDataSelectiveOperationCompleted, userState);
        }
        
        private void OnReceiveDataSelectiveOperationCompleted(object arg) {
            if ((this.ReceiveDataSelectiveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReceiveDataSelectiveCompleted(this, new ReceiveDataSelectiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IDataExchange/DataReceived", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public BAIResult DataReceived([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] BAIUser user) {
            object[] results = this.Invoke("DataReceived", new object[] {
                        user});
            return ((BAIResult)(results[0]));
        }
        
        /// <remarks/>
        public void DataReceivedAsync(BAIUser user) {
            this.DataReceivedAsync(user, null);
        }
        
        /// <remarks/>
        public void DataReceivedAsync(BAIUser user, object userState) {
            if ((this.DataReceivedOperationCompleted == null)) {
                this.DataReceivedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDataReceivedOperationCompleted);
            }
            this.InvokeAsync("DataReceived", new object[] {
                        user}, this.DataReceivedOperationCompleted, userState);
        }
        
        private void OnDataReceivedOperationCompleted(object arg) {
            if ((this.DataReceivedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DataReceivedCompleted(this, new DataReceivedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IDataExchange/DataReceivedSelective", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public BAIResult DataReceivedSelective([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] BAIUser user, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string category) {
            object[] results = this.Invoke("DataReceivedSelective", new object[] {
                        user,
                        category});
            return ((BAIResult)(results[0]));
        }
        
        /// <remarks/>
        public void DataReceivedSelectiveAsync(BAIUser user, string category) {
            this.DataReceivedSelectiveAsync(user, category, null);
        }
        
        /// <remarks/>
        public void DataReceivedSelectiveAsync(BAIUser user, string category, object userState) {
            if ((this.DataReceivedSelectiveOperationCompleted == null)) {
                this.DataReceivedSelectiveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDataReceivedSelectiveOperationCompleted);
            }
            this.InvokeAsync("DataReceivedSelective", new object[] {
                        user,
                        category}, this.DataReceivedSelectiveOperationCompleted, userState);
        }
        
        private void OnDataReceivedSelectiveOperationCompleted(object arg) {
            if ((this.DataReceivedSelectiveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DataReceivedSelectiveCompleted(this, new DataReceivedSelectiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IDataExchange/ReceiveUpdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public BAIResult ReceiveUpdate([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] BAIUser user, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/DoX.BAI.ImpEx.Shared")] out UpdateFile[] files) {
            object[] results = this.Invoke("ReceiveUpdate", new object[] {
                        user});
            files = ((UpdateFile[])(results[1]));
            return ((BAIResult)(results[0]));
        }
        
        /// <remarks/>
        public void ReceiveUpdateAsync(BAIUser user) {
            this.ReceiveUpdateAsync(user, null);
        }
        
        /// <remarks/>
        public void ReceiveUpdateAsync(BAIUser user, object userState) {
            if ((this.ReceiveUpdateOperationCompleted == null)) {
                this.ReceiveUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReceiveUpdateOperationCompleted);
            }
            this.InvokeAsync("ReceiveUpdate", new object[] {
                        user}, this.ReceiveUpdateOperationCompleted, userState);
        }
        
        private void OnReceiveUpdateOperationCompleted(object arg) {
            if ((this.ReceiveUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReceiveUpdateCompleted(this, new ReceiveUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IDataExchange/UpdateReceived", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public BAIResult UpdateReceived([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] BAIUser user) {
            object[] results = this.Invoke("UpdateReceived", new object[] {
                        user});
            return ((BAIResult)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateReceivedAsync(BAIUser user) {
            this.UpdateReceivedAsync(user, null);
        }
        
        /// <remarks/>
        public void UpdateReceivedAsync(BAIUser user, object userState) {
            if ((this.UpdateReceivedOperationCompleted == null)) {
                this.UpdateReceivedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateReceivedOperationCompleted);
            }
            this.InvokeAsync("UpdateReceived", new object[] {
                        user}, this.UpdateReceivedOperationCompleted, userState);
        }
        
        private void OnUpdateReceivedOperationCompleted(object arg) {
            if ((this.UpdateReceivedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateReceivedCompleted(this, new UpdateReceivedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IDataExchange/SendLog", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public BAIResult SendLog([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] BAIUser user, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string log) {
            object[] results = this.Invoke("SendLog", new object[] {
                        user,
                        log});
            return ((BAIResult)(results[0]));
        }
        
        /// <remarks/>
        public void SendLogAsync(BAIUser user, string log) {
            this.SendLogAsync(user, log, null);
        }
        
        /// <remarks/>
        public void SendLogAsync(BAIUser user, string log, object userState) {
            if ((this.SendLogOperationCompleted == null)) {
                this.SendLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendLogOperationCompleted);
            }
            this.InvokeAsync("SendLog", new object[] {
                        user,
                        log}, this.SendLogOperationCompleted, userState);
        }
        
        private void OnSendLogOperationCompleted(object arg) {
            if ((this.SendLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendLogCompleted(this, new SendLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IDataExchange/GetBAITime", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public BAIResult GetBAITime([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] BAIUser user, out System.DateTime dt, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool dtSpecified) {
            object[] results = this.Invoke("GetBAITime", new object[] {
                        user});
            dt = ((System.DateTime)(results[1]));
            dtSpecified = ((bool)(results[2]));
            return ((BAIResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetBAITimeAsync(BAIUser user) {
            this.GetBAITimeAsync(user, null);
        }
        
        /// <remarks/>
        public void GetBAITimeAsync(BAIUser user, object userState) {
            if ((this.GetBAITimeOperationCompleted == null)) {
                this.GetBAITimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBAITimeOperationCompleted);
            }
            this.InvokeAsync("GetBAITime", new object[] {
                        user}, this.GetBAITimeOperationCompleted, userState);
        }
        
        private void OnGetBAITimeOperationCompleted(object arg) {
            if ((this.GetBAITimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBAITimeCompleted(this, new GetBAITimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/DoX.BAI.ImpEx.Shared")]
    public partial class BAIUser {
        
        private string identifierField;
        
        private string macAddressField;
        
        private string passwordField;
        
        private string usernameField;
        
        private string versionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Identifier {
            get {
                return this.identifierField;
            }
            set {
                this.identifierField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string MacAddress {
            get {
                return this.macAddressField;
            }
            set {
                this.macAddressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/DoX.BAI.ImpEx.Shared")]
    public partial class UpdateFile {
        
        private byte[] fileContentField;
        
        private string fileNameField;
        
        private byte[] sHA1HashField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)]
        public byte[] FileContent {
            get {
                return this.fileContentField;
            }
            set {
                this.fileContentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string FileName {
            get {
                return this.fileNameField;
            }
            set {
                this.fileNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)]
        public byte[] SHA1Hash {
            get {
                return this.sHA1HashField;
            }
            set {
                this.sHA1HashField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/DoX.BAI.ImpEx.Shared")]
    public partial class DataEntry {
        
        private string categoryField;
        
        private string dataField;
        
        private string locationField;
        
        private string tagField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Category {
            get {
                return this.categoryField;
            }
            set {
                this.categoryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Data {
            get {
                return this.dataField;
            }
            set {
                this.dataField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Tag {
            get {
                return this.tagField;
            }
            set {
                this.tagField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/DoX.BAI.ImpEx.Shared")]
    public partial class ConfigEntryIdent {
        
        private string cSVColDelimiterField;

        private bool ignoreRootElements;
        
        private string categoryField;
        
        private string contractVersionField;
        
        private DataFormat dataFormatField;
        
        private bool dataFormatFieldSpecified;
        
        private Direction directionField;
        
        private bool directionFieldSpecified;
        
        private string locationField;
        
        private string usernameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CSVColDelimiter {
            get {
                return this.cSVColDelimiterField;
            }
            set {
                this.cSVColDelimiterField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute()]
        public bool IgnoreRootElements
        {
            get
            {
                return this.ignoreRootElements;
            }
            set
            {
                this.ignoreRootElements = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Category {
            get {
                return this.categoryField;
            }
            set {
                this.categoryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ContractVersion {
            get {
                return this.contractVersionField;
            }
            set {
                this.contractVersionField = value;
            }
        }
        
        /// <remarks/>
        public DataFormat DataFormat {
            get {
                return this.dataFormatField;
            }
            set {
                this.dataFormatField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataFormatSpecified {
            get {
                return this.dataFormatFieldSpecified;
            }
            set {
                this.dataFormatFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public Direction Direction {
            get {
                return this.directionField;
            }
            set {
                this.directionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DirectionSpecified {
            get {
                return this.directionFieldSpecified;
            }
            set {
                this.directionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/DoX.BAI.ImpEx.Shared")]
    public enum DataFormat {
        
        /// <remarks/>
        Unknown,
        
        /// <remarks/>
        Xml,
        
        /// <remarks/>
        FixedLength,
        
        /// <remarks/>
        Csv,
        
        /// <remarks/>
        RawData,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/DoX.BAI.ImpEx.Shared")]
    public enum Direction {
        
        /// <remarks/>
        ServerToClient,
        
        /// <remarks/>
        ClientToServer,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/DoX.BAI.ImpEx.Shared")]
    public partial class ConfigEntry {
        
        private string contractField;
        
        private bool enabledField;
        
        private bool enabledFieldSpecified;
        
        private string encodingField;
        
        private string filePatternField;
        
        private string filterExpressionField;

        private string xsltTransformationField;

        private bool xsltActivationField;

        private string flagFileNameField;
        
        private ConfigEntryIdent identField;
        
        private bool notificationField;
        
        private bool notificationFieldSpecified;
        
        private System.Nullable<int> priorityField;
        
        private bool priorityFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Contract {
            get {
                return this.contractField;
            }
            set {
                this.contractField = value;
            }
        }
        
        /// <remarks/>
        public bool Enabled {
            get {
                return this.enabledField;
            }
            set {
                this.enabledField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EnabledSpecified {
            get {
                return this.enabledFieldSpecified;
            }
            set {
                this.enabledFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Encoding {
            get {
                return this.encodingField;
            }
            set {
                this.encodingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string FilePattern {
            get {
                return this.filePatternField;
            }
            set {
                this.filePatternField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string FilterExpression {
            get {
                return this.filterExpressionField;
            }
            set {
                this.filterExpressionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string XsltTransformation
        {
            get
            {
                return this.xsltTransformationField;
            }
            set
            {
                this.xsltTransformationField = value;
            }
        }

        /// <remarks/>
        public bool XsltActivation
        {
            get
            {
                return this.xsltActivationField;
            }
            set
            {
                this.xsltActivationField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string FlagFileName {
            get {
                return this.flagFileNameField;
            }
            set {
                this.flagFileNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ConfigEntryIdent Ident {
            get {
                return this.identField;
            }
            set {
                this.identField = value;
            }
        }
        
        /// <remarks/>
        public bool Notification {
            get {
                return this.notificationField;
            }
            set {
                this.notificationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NotificationSpecified {
            get {
                return this.notificationFieldSpecified;
            }
            set {
                this.notificationFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> Priority {
            get {
                return this.priorityField;
            }
            set {
                this.priorityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PrioritySpecified {
            get {
                return this.priorityFieldSpecified;
            }
            set {
                this.priorityFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/DoX.BAI.ImpEx.Shared")]
    public partial class Config {
        
        private string clientTypeField;
        
        private ConfigEntry[] configEntriesField;
        
        private int configTimerIntervallField;
        
        private bool configTimerIntervallFieldSpecified;
        
        private System.Nullable<System.DateTime> dataExchangeTimeField;
        
        private bool dataExchangeTimeFieldSpecified;
        
        private bool enabledField;
        
        private bool enabledFieldSpecified;
        
        private Events eventsField;
        
        private bool eventsFieldSpecified;
        
        private int hoursToLogField;
        
        private bool hoursToLogFieldSpecified;
        
        private string ipAddressField;
        
        private int logEntryTypeField;
        
        private bool logEntryTypeFieldSpecified;
        
        private string macAddressField;
        
        private int maxKBClientToServerField;
        
        private bool maxKBClientToServerFieldSpecified;
        
        private int maxRecCntServerToClientField;
        
        private bool maxRecCntServerToClientFieldSpecified;
        
        private ArrayOfKeyValueOfstringstringKeyValueOfstringstring[] metadataField;
        
        private string notificationAddressField;
        
        private int partitionIdField;
        
        private bool partitionIdFieldSpecified;
        
        private int pollForDataIntervallField;
        
        private bool pollForDataIntervallFieldSpecified;
        
        private int reorgHoursExportField;
        
        private bool reorgHoursExportFieldSpecified;
        
        private int reorgHoursImportField;
        
        private bool reorgHoursImportFieldSpecified;
        
        private bool uniqueAccessPointField;
        
        private bool uniqueAccessPointFieldSpecified;
        
        private string updateDirField;
        
        private string usernameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ClientType {
            get {
                return this.clientTypeField;
            }
            set {
                this.clientTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public ConfigEntry[] ConfigEntries {
            get {
                return this.configEntriesField;
            }
            set {
                this.configEntriesField = value;
            }
        }
        
        /// <remarks/>
        public int ConfigTimerIntervall {
            get {
                return this.configTimerIntervallField;
            }
            set {
                this.configTimerIntervallField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConfigTimerIntervallSpecified {
            get {
                return this.configTimerIntervallFieldSpecified;
            }
            set {
                this.configTimerIntervallFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> DataExchangeTime {
            get {
                return this.dataExchangeTimeField;
            }
            set {
                this.dataExchangeTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataExchangeTimeSpecified {
            get {
                return this.dataExchangeTimeFieldSpecified;
            }
            set {
                this.dataExchangeTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool Enabled {
            get {
                return this.enabledField;
            }
            set {
                this.enabledField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EnabledSpecified {
            get {
                return this.enabledFieldSpecified;
            }
            set {
                this.enabledFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public Events Events {
            get {
                return this.eventsField;
            }
            set {
                this.eventsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EventsSpecified {
            get {
                return this.eventsFieldSpecified;
            }
            set {
                this.eventsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int HoursToLog {
            get {
                return this.hoursToLogField;
            }
            set {
                this.hoursToLogField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HoursToLogSpecified {
            get {
                return this.hoursToLogFieldSpecified;
            }
            set {
                this.hoursToLogFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string IpAddress {
            get {
                return this.ipAddressField;
            }
            set {
                this.ipAddressField = value;
            }
        }
        
        /// <remarks/>
        public int LogEntryType {
            get {
                return this.logEntryTypeField;
            }
            set {
                this.logEntryTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LogEntryTypeSpecified {
            get {
                return this.logEntryTypeFieldSpecified;
            }
            set {
                this.logEntryTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string MacAddress {
            get {
                return this.macAddressField;
            }
            set {
                this.macAddressField = value;
            }
        }
        
        /// <remarks/>
        public int MaxKBClientToServer {
            get {
                return this.maxKBClientToServerField;
            }
            set {
                this.maxKBClientToServerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaxKBClientToServerSpecified {
            get {
                return this.maxKBClientToServerFieldSpecified;
            }
            set {
                this.maxKBClientToServerFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int MaxRecCntServerToClient {
            get {
                return this.maxRecCntServerToClientField;
            }
            set {
                this.maxRecCntServerToClientField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaxRecCntServerToClientSpecified {
            get {
                return this.maxRecCntServerToClientFieldSpecified;
            }
            set {
                this.maxRecCntServerToClientFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("KeyValueOfstringstring", Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays", IsNullable=false)]
        public ArrayOfKeyValueOfstringstringKeyValueOfstringstring[] Metadata {
            get {
                return this.metadataField;
            }
            set {
                this.metadataField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string NotificationAddress {
            get {
                return this.notificationAddressField;
            }
            set {
                this.notificationAddressField = value;
            }
        }
        
        /// <remarks/>
        public int PartitionId {
            get {
                return this.partitionIdField;
            }
            set {
                this.partitionIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PartitionIdSpecified {
            get {
                return this.partitionIdFieldSpecified;
            }
            set {
                this.partitionIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int PollForDataIntervall {
            get {
                return this.pollForDataIntervallField;
            }
            set {
                this.pollForDataIntervallField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PollForDataIntervallSpecified {
            get {
                return this.pollForDataIntervallFieldSpecified;
            }
            set {
                this.pollForDataIntervallFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int ReorgHoursExport {
            get {
                return this.reorgHoursExportField;
            }
            set {
                this.reorgHoursExportField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ReorgHoursExportSpecified {
            get {
                return this.reorgHoursExportFieldSpecified;
            }
            set {
                this.reorgHoursExportFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int ReorgHoursImport {
            get {
                return this.reorgHoursImportField;
            }
            set {
                this.reorgHoursImportField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ReorgHoursImportSpecified {
            get {
                return this.reorgHoursImportFieldSpecified;
            }
            set {
                this.reorgHoursImportFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool UniqueAccessPoint {
            get {
                return this.uniqueAccessPointField;
            }
            set {
                this.uniqueAccessPointField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UniqueAccessPointSpecified {
            get {
                return this.uniqueAccessPointFieldSpecified;
            }
            set {
                this.uniqueAccessPointFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string UpdateDir {
            get {
                return this.updateDirField;
            }
            set {
                this.updateDirField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.FlagsAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/DoX.BAI.ImpEx.Shared")]
    public enum Events {
        
        /// <remarks/>
        UpdateAvailable = 1,
        
        /// <remarks/>
        SendLogToServer = 2,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
    public partial class ArrayOfKeyValueOfstringstringKeyValueOfstringstring {
        
        private string keyField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/DoX.BAI.ImpEx.Shared")]
    public partial class BAIResult {
        
        private string messageField;
        
        private BAIResultType resultTypeField;
        
        private bool resultTypeFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        public BAIResultType ResultType {
            get {
                return this.resultTypeField;
            }
            set {
                this.resultTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ResultTypeSpecified {
            get {
                return this.resultTypeFieldSpecified;
            }
            set {
                this.resultTypeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/DoX.BAI.ImpEx.Shared")]
    public enum BAIResultType {
        
        /// <remarks/>
        OK,
        
        /// <remarks/>
        Error,
        
        /// <remarks/>
        AuthenticationFailure,
        
        /// <remarks/>
        ConfigFailure,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SubscribeCompletedEventHandler(object sender, SubscribeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubscribeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SubscribeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BAIResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BAIResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UnSubscribeCompletedEventHandler(object sender, UnSubscribeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnSubscribeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnSubscribeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BAIResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BAIResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetConfigCompletedEventHandler(object sender, GetConfigCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetConfigCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetConfigCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BAIResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BAIResult)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public Config config {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Config)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SendDataCompletedEventHandler(object sender, SendDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BAIResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BAIResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void ReceiveDataCompletedEventHandler(object sender, ReceiveDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReceiveDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReceiveDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BAIResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BAIResult)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public DataEntry[] dataEntries {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataEntry[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public System.Nullable<bool> furtherDataAvailable {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Nullable<bool>)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public bool furtherDataAvailableSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void ReceiveDataSelectiveCompletedEventHandler(object sender, ReceiveDataSelectiveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReceiveDataSelectiveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReceiveDataSelectiveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BAIResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BAIResult)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public DataEntry[] dataEntries {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataEntry[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public System.Nullable<bool> furtherDataAvailable {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Nullable<bool>)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public bool furtherDataAvailableSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DataReceivedCompletedEventHandler(object sender, DataReceivedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DataReceivedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DataReceivedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BAIResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BAIResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DataReceivedSelectiveCompletedEventHandler(object sender, DataReceivedSelectiveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DataReceivedSelectiveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DataReceivedSelectiveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BAIResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BAIResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void ReceiveUpdateCompletedEventHandler(object sender, ReceiveUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReceiveUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReceiveUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BAIResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BAIResult)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public UpdateFile[] files {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UpdateFile[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateReceivedCompletedEventHandler(object sender, UpdateReceivedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateReceivedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateReceivedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BAIResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BAIResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SendLogCompletedEventHandler(object sender, SendLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BAIResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BAIResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetBAITimeCompletedEventHandler(object sender, GetBAITimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBAITimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBAITimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BAIResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BAIResult)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.DateTime dt {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public bool dtSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[2]));
            }
        }
    }
}

#pragma warning restore 1591